
04_PWM_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000196  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000924  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000807  00000000  00000000  00000bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000371  00000000  00000000  000013bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001730  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000403  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006d  00000000  00000000  00001b87  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001bf4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	29 d0       	rcall	.+82     	; 0xec <main>
  9a:	7b c0       	rjmp	.+246    	; 0x192 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <Port_Init>:
#include <util/delay.h>

void Port_Init()
{
	//dc motor
	DDRB=0x60;
  9e:	80 e6       	ldi	r24, 0x60	; 96
  a0:	87 bb       	out	0x17, r24	; 23
	TCCR1A=0x82;
  a2:	82 e8       	ldi	r24, 0x82	; 130
  a4:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=0x1A;
  a6:	8a e1       	ldi	r24, 0x1A	; 26
  a8:	8e bd       	out	0x2e, r24	; 46
	OCR1A=0;
  aa:	1b bc       	out	0x2b, r1	; 43
  ac:	1a bc       	out	0x2a, r1	; 42
	OCR1B=0;
  ae:	19 bc       	out	0x29, r1	; 41
  b0:	18 bc       	out	0x28, r1	; 40
	ICR1=100;
  b2:	84 e6       	ldi	r24, 0x64	; 100
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	97 bd       	out	0x27, r25	; 39
  b8:	86 bd       	out	0x26, r24	; 38
	//button
	DDRE = 0x00;
  ba:	12 b8       	out	0x02, r1	; 2
	//led
	DDRC = 0xff;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	84 bb       	out	0x14, r24	; 20
  c0:	08 95       	ret

000000c2 <DC_Motor>:
}

//volatile char speed=0;
void DC_Motor(int speed)
{
	if(speed< 0) speed= 0;
  c2:	99 23       	and	r25, r25
  c4:	14 f4       	brge	.+4      	; 0xca <DC_Motor+0x8>
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
	if(speed>100) speed=100;
  ca:	85 36       	cpi	r24, 0x65	; 101
  cc:	91 05       	cpc	r25, r1
  ce:	14 f0       	brlt	.+4      	; 0xd4 <DC_Motor+0x12>
  d0:	84 e6       	ldi	r24, 0x64	; 100
  d2:	90 e0       	ldi	r25, 0x00	; 0
	OCR1A=speed;
  d4:	9b bd       	out	0x2b, r25	; 43
  d6:	8a bd       	out	0x2a, r24	; 42
  d8:	08 95       	ret

000000da <Btn_click>:
}

int Btn_click(uint8_t index)
{
	if ((PINE&index) == 0x00)
  da:	91 b1       	in	r25, 0x01	; 1
  dc:	89 23       	and	r24, r25
  de:	19 f4       	brne	.+6      	; 0xe6 <Btn_click+0xc>
	{
		return 1;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	08 95       	ret
	}
	return 0;
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
}
  ea:	08 95       	ret

000000ec <main>:

int main(void)
{
	int speed = 0;
	Port_Init();
  ec:	d8 df       	rcall	.-80     	; 0x9e <Port_Init>
	return 0;
}

int main(void)
{
	int speed = 0;
  ee:	c0 e0       	ldi	r28, 0x00	; 0
  f0:	d0 e0       	ldi	r29, 0x00	; 0
	Port_Init();
	
	while(1)
	{
		// up
		if(Btn_click(0x10))
  f2:	80 e1       	ldi	r24, 0x10	; 16
  f4:	f2 df       	rcall	.-28     	; 0xda <Btn_click>
  f6:	89 2b       	or	r24, r25
  f8:	51 f0       	breq	.+20     	; 0x10e <main+0x22>
		{
			while(Btn_click(0x10));
  fa:	80 e1       	ldi	r24, 0x10	; 16
  fc:	ee df       	rcall	.-36     	; 0xda <Btn_click>
  fe:	89 2b       	or	r24, r25
 100:	e1 f7       	brne	.-8      	; 0xfa <main+0xe>
 102:	20 97       	sbiw	r28, 0x00	; 0
			
			if(speed == 0)	speed = 60;
 104:	11 f0       	breq	.+4      	; 0x10a <main+0x1e>
 106:	2a 96       	adiw	r28, 0x0a	; 10
			else	speed += 10;
 108:	02 c0       	rjmp	.+4      	; 0x10e <main+0x22>
 10a:	cc e3       	ldi	r28, 0x3C	; 60
		// up
		if(Btn_click(0x10))
		{
			while(Btn_click(0x10));
			
			if(speed == 0)	speed = 60;
 10c:	d0 e0       	ldi	r29, 0x00	; 0
			else	speed += 10;
		}
		//down
		if(Btn_click(0x20))
 10e:	80 e2       	ldi	r24, 0x20	; 32
 110:	e4 df       	rcall	.-56     	; 0xda <Btn_click>
 112:	89 2b       	or	r24, r25
 114:	59 f0       	breq	.+22     	; 0x12c <main+0x40>
		{
			while(Btn_click(0x20));
 116:	80 e2       	ldi	r24, 0x20	; 32
 118:	e0 df       	rcall	.-64     	; 0xda <Btn_click>
 11a:	89 2b       	or	r24, r25
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x2a>
 11e:	cc 33       	cpi	r28, 0x3C	; 60
			if(speed == 60) speed = 0;
 120:	d1 05       	cpc	r29, r1
 122:	11 f0       	breq	.+4      	; 0x128 <main+0x3c>
 124:	2a 97       	sbiw	r28, 0x0a	; 10
			else	speed -= 10;
 126:	02 c0       	rjmp	.+4      	; 0x12c <main+0x40>
		}
		//down
		if(Btn_click(0x20))
		{
			while(Btn_click(0x20));
			if(speed == 60) speed = 0;
 128:	c0 e0       	ldi	r28, 0x00	; 0
 12a:	d0 e0       	ldi	r29, 0x00	; 0
			else	speed -= 10;
		}
		//stop
		if(Btn_click(0x40))
 12c:	80 e4       	ldi	r24, 0x40	; 64
 12e:	d5 df       	rcall	.-86     	; 0xda <Btn_click>
 130:	89 2b       	or	r24, r25
 132:	31 f0       	breq	.+12     	; 0x140 <main+0x54>
		{
			while(Btn_click(0x40));
 134:	80 e4       	ldi	r24, 0x40	; 64
 136:	d1 df       	rcall	.-94     	; 0xda <Btn_click>
 138:	89 2b       	or	r24, r25
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0x48>
 13c:	c0 e0       	ldi	r28, 0x00	; 0
			speed = 0;
 13e:	d0 e0       	ldi	r29, 0x00	; 0
 140:	c5 36       	cpi	r28, 0x65	; 101
		}
		
		if (speed > 100)	speed = 100;
 142:	d1 05       	cpc	r29, r1
 144:	14 f0       	brlt	.+4      	; 0x14a <main+0x5e>
 146:	c4 e6       	ldi	r28, 0x64	; 100
 148:	d0 e0       	ldi	r29, 0x00	; 0
 14a:	dd 23       	and	r29, r29
		if (speed < 0)	speed = 0;
 14c:	14 f4       	brge	.+4      	; 0x152 <main+0x66>
 14e:	c0 e0       	ldi	r28, 0x00	; 0
 150:	d0 e0       	ldi	r29, 0x00	; 0
 152:	20 97       	sbiw	r28, 0x00	; 0
		
		if(speed == 0)	PORTC = 0xFE;
 154:	11 f4       	brne	.+4      	; 0x15a <main+0x6e>
 156:	8e ef       	ldi	r24, 0xFE	; 254
 158:	85 bb       	out	0x15, r24	; 21
 15a:	cc 33       	cpi	r28, 0x3C	; 60
		if(speed == 60)	PORTC = 0xFD;
 15c:	d1 05       	cpc	r29, r1
 15e:	11 f4       	brne	.+4      	; 0x164 <main+0x78>
 160:	8d ef       	ldi	r24, 0xFD	; 253
 162:	85 bb       	out	0x15, r24	; 21
 164:	c6 34       	cpi	r28, 0x46	; 70
		if(speed == 70)	PORTC = 0xFB;
 166:	d1 05       	cpc	r29, r1
 168:	11 f4       	brne	.+4      	; 0x16e <main+0x82>
 16a:	8b ef       	ldi	r24, 0xFB	; 251
 16c:	85 bb       	out	0x15, r24	; 21
 16e:	c0 35       	cpi	r28, 0x50	; 80
		if(speed == 80)	PORTC = 0xF7;
 170:	d1 05       	cpc	r29, r1
 172:	11 f4       	brne	.+4      	; 0x178 <main+0x8c>
 174:	87 ef       	ldi	r24, 0xF7	; 247
 176:	85 bb       	out	0x15, r24	; 21
 178:	ca 35       	cpi	r28, 0x5A	; 90
		if(speed == 90)	PORTC = 0xEF;
 17a:	d1 05       	cpc	r29, r1
 17c:	11 f4       	brne	.+4      	; 0x182 <main+0x96>
 17e:	8f ee       	ldi	r24, 0xEF	; 239
 180:	85 bb       	out	0x15, r24	; 21
		if(speed == 100)	PORTC = 0xDF;
 182:	c4 36       	cpi	r28, 0x64	; 100
 184:	d1 05       	cpc	r29, r1
 186:	11 f4       	brne	.+4      	; 0x18c <main+0xa0>
 188:	8f ed       	ldi	r24, 0xDF	; 223
 18a:	85 bb       	out	0x15, r24	; 21
		
		DC_Motor(speed);
 18c:	ce 01       	movw	r24, r28
 18e:	99 df       	rcall	.-206    	; 0xc2 <DC_Motor>
 190:	b0 cf       	rjmp	.-160    	; 0xf2 <main+0x6>

00000192 <_exit>:
	}
 192:	f8 94       	cli

00000194 <__stop_program>:
 194:	ff cf       	rjmp	.-2      	; 0x194 <__stop_program>
