
01_Driving1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000124  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000958  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000812  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e0  00000000  00000000  0000137a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000165c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000426  00000000  00000000  00001690  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  00001ab6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001b8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	05 d0       	rcall	.+10     	; 0xa4 <main>
  9a:	42 c0       	rjmp	.+132    	; 0x120 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <Port_init>:
#define M1_HIGH (PORTA |= 0x02)
#define M1_LOW	(PORTA &= 0xfd)

void Port_init()
{
	DDRA = 0xff;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	8a bb       	out	0x1a, r24	; 26
  a2:	08 95       	ret

000000a4 <main>:
}

int main(void)
{
	Port_init();
  a4:	fc df       	rcall	.-8      	; 0x9e <Port_init>
	
	while (1) 
	{
		M0_HIGH; M1_HIGH;
  a6:	8b b3       	in	r24, 0x1b	; 27
  a8:	81 60       	ori	r24, 0x01	; 1
  aa:	8b bb       	out	0x1b, r24	; 27
  ac:	8b b3       	in	r24, 0x1b	; 27
  ae:	82 60       	ori	r24, 0x02	; 2
  b0:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b2:	2f ef       	ldi	r18, 0xFF	; 255
  b4:	83 ed       	ldi	r24, 0xD3	; 211
  b6:	90 e3       	ldi	r25, 0x30	; 48
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	80 40       	sbci	r24, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <main+0x14>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <main+0x1e>
  c2:	00 00       	nop
		_delay_ms(1000);
		M0_LOW; M1_HIGH;
  c4:	8b b3       	in	r24, 0x1b	; 27
  c6:	8e 7f       	andi	r24, 0xFE	; 254
  c8:	8b bb       	out	0x1b, r24	; 27
  ca:	8b b3       	in	r24, 0x1b	; 27
  cc:	82 60       	ori	r24, 0x02	; 2
  ce:	8b bb       	out	0x1b, r24	; 27
  d0:	2f ef       	ldi	r18, 0xFF	; 255
  d2:	83 ed       	ldi	r24, 0xD3	; 211
  d4:	90 e3       	ldi	r25, 0x30	; 48
  d6:	21 50       	subi	r18, 0x01	; 1
  d8:	80 40       	sbci	r24, 0x00	; 0
  da:	90 40       	sbci	r25, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x32>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x3c>
  e0:	00 00       	nop
		_delay_ms(1000);
		M0_HIGH; M1_HIGH;
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	81 60       	ori	r24, 0x01	; 1
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	8b b3       	in	r24, 0x1b	; 27
  ea:	82 60       	ori	r24, 0x02	; 2
  ec:	8b bb       	out	0x1b, r24	; 27
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	83 ed       	ldi	r24, 0xD3	; 211
  f2:	90 e3       	ldi	r25, 0x30	; 48
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x50>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x5a>
  fe:	00 00       	nop
		_delay_ms(1000);
		M0_HIGH; M1_LOW;
 100:	8b b3       	in	r24, 0x1b	; 27
 102:	81 60       	ori	r24, 0x01	; 1
 104:	8b bb       	out	0x1b, r24	; 27
 106:	8b b3       	in	r24, 0x1b	; 27
 108:	8d 7f       	andi	r24, 0xFD	; 253
 10a:	8b bb       	out	0x1b, r24	; 27
 10c:	2f ef       	ldi	r18, 0xFF	; 255
 10e:	83 ed       	ldi	r24, 0xD3	; 211
 110:	90 e3       	ldi	r25, 0x30	; 48
 112:	21 50       	subi	r18, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x6e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x78>
 11c:	00 00       	nop
 11e:	c3 cf       	rjmp	.-122    	; 0xa6 <main+0x2>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
